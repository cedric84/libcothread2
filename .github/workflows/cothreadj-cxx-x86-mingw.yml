name: cothreadj-cxx-x86-mingw
on:
  push:
    branches:
      - ci

jobs:
  x86-mingw:
    runs-on: windows-latest
    env:
      CMAKE_SOURCE_DIR: .
      CMAKE_BINARY_DIR: out\build\${{ github.job }}
      CMAKE_INSTALL_PREFIX: out\install\${{ github.job }}
      CMAKE_TOOLCHAIN_FILE: ./.github/workflows/cmake-toolchains/x86_64-windows-to-${{ github.job }}.cmake
      MINGW_URL: https://github.com/niXman/mingw-builds-binaries/releases/download/14.2.0-rt_v12-rev0/i686-14.2.0-release-win32-dwarf-msvcrt-rt_v12-rev0.7z

    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4

      - name: Install prerequisites
        run: |
          Invoke-WebRequest -OutFile ./mingw.7z $env:MINGW_URL
          7z x ./mingw.7z
          echo "PATH=$PWD\mingw32\bin;$env:PATH" >> "$env:GITHUB_ENV"

      - name: Configure the project & generate a native build system
        run: >
          cmake
          -G "MinGW Makefiles"
          -D CMAKE_INSTALL_PREFIX=$env:CMAKE_INSTALL_PREFIX
          -D CMAKE_TOOLCHAIN_FILE=$env:CMAKE_TOOLCHAIN_FILE
          -S $env:CMAKE_SOURCE_DIR
          -B $env:CMAKE_BINARY_DIR

      - name: Build the "install" target using the native build system
        run:
          cmake --build $env:CMAKE_BINARY_DIR --target install

      - name: Unittest
        run: >
          cmd /C (
          g++ -Wall -Werror -o $env:CMAKE_INSTALL_PREFIX/bin/unittest-cxx
          -I ./cothreadj/unittest-cxx/include
          -I $env:CMAKE_INSTALL_PREFIX/include/cothread-1.0
          -L $env:CMAKE_INSTALL_PREFIX/lib
          ./cothreadj/unittest-cxx/src/main.cxx
          ./cothreadj/unittest-cxx/src/cothdj.cxx
          ./cothreadj/unittest-cxx/src/unittest0.cxx
          ./cothreadj/unittest-cxx/src/unittest1.cxx
          ./cothreadj/unittest-cxx/src/unittest2.cxx
          -lcothreadj
          )
          &&
          cmd /C $env:CMAKE_INSTALL_PREFIX\bin\unittest-cxx
